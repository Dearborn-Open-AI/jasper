#! /usr/bin/env bash
################################################################################

cmd_dir=$(dirname "$0") || exit 1
source "$cmd_dir"/utilities || exit 1

################################################################################

set_source_and_build_dirs || panic "cannot set source and build directories"

#abs_source_dir="$1"
#abs_build_dir="$2"

top_dir="$cmd_dir/../.."
data_dir="$top_dir/data"

test_program="$abs_top_builddir/src/appl/multithread"

################################################################################

verbose=0
if [ $# -ge 1 ]; then
	verbose=1
fi

tmp_dir=$(make_tmp_dir)

log_file=$tmp_dir/log

################################################################################

error_count=0

for out_format in jp2 jpc jpg pnm bmp; do
	out_format=jp2
	command=("$test_program")
	command+=(-f "$out_format")
	command+=(-l 0)
	command+=(-r 1)
	command+=("$data_dir"/images/*.{pnm,jpg,bmp,ras})
	if [ "$verbose" -gt 0 ]; then
		echo "RUNNING: ${command[@]}"
	fi
	"${command[@]}" >& ${log_file}
	status=$?
	if [ "$status" -ne 0 ]; then
		echo "============================================================"
		echo "COMMAND: ${command[@]}"
		cat "$log_file"
		echo "============================================================"
		error_count=$((error_count + 1))
	fi
done

################################################################################

echo "error count: $error_count"
if [ "$error_count" -gt 0 ]; then
	echo "STATUS: FAILED"
	panic "FAILED"
fi

echo "STATUS: PASSED"
