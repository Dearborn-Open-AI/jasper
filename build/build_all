#! /usr/bin/env bash

panic()
{
	echo "ERROR: $@"
	exit 1
}

program_dir=$(dirname "$0") || exit 1
jas_realpath="$program_dir/jas_realpath"
abs_program_dir=$("$jas_realpath" "$program_dir") || panic
build_program="$program_dir/build"

usage()
{
	echo "bad usage: $@"
	exit 2
}

verbose=0
build_dir=
crostini=0
enable=1

while getopts vb:cn option; do
	case "$option" in
	n)
		enable=0;;
	c)
		crostini=1;;
	b)
		build_dir="$OPTARG";;
	v)
		verbose=$((verbose + 1));
	esac
done
shift $((OPTIND - 1))

if [ -z "$build_dir" ]; then
	build_dir="$abs_program_dir/../tmp_cmake"
fi

os=unknown
if [ -n "$RUNNER_OS" ]; then
	case "$RUNNER_OS" in
	MacOS|macOS)
		os=macos;;
	Linux|linux)
		os=linux;;
	Windows|windows)
		os=windows;;
	esac
fi

################################################################################

cat <<- EOF
================================================================================
Operating System: $os
================================================================================
EOF

global_options=()
if [ "$verbose" -ge 1 ]; then
	global_options+=(--verbose)
fi
if [ "$crostini" -ne 0 ]; then
	global_options+=(--crostini)
fi
lsan_option=(--lsan)
case "$os" in
macos)
	lsan_option=();;
esac

################################################################################

for multithread in 0 1; do

	cat <<- EOF
	================================================================================
	BUILD: Multi-Thread Static Library Debug Build (ASan, LSan, UBSan)
	================================================================================
	EOF
	command=("$build_program")
	command+=("${global_options[@]}")
	command+=(--build-dir   "$build_dir/test_static_debug-$multithread/build")
	command+=(--install-dir "$build_dir/test_static_debug-$multithread/install")
	command+=(--static)
	command+=(--debug)
	command+=(--ubsan)
	command+=(--asan)
	command+=("${lsan_option[@]}")
	command+=(--test)
	command+=(--no-documentation)
	if [ "$multithread" -ne 0 ]; then
		command+=(--multithread)
	else
		command+=(--no-multithread)
	fi
	echo "RUNNING: ${command[@]}"
	if [ "$enable" -ne 0 ]; then
		"${command[@]}" || panic
	fi

done

################################################################################

cat <<- EOF
================================================================================
BUILD: Multi-Thread Static Library Debug Build (TSan, UBSan)
================================================================================
EOF
command=("$build_program")
command+=("${global_options[@]}")
command+=(--build-dir   "$build_dir/test_static_debug_tsan/build")
command+=(--install-dir "$build_dir/test_static_debug_tsan/install")
command+=(--prefer-pthread)
command+=(--static)
command+=(--debug)
command+=(--ubsan)
command+=(--tsan)
command+=(--test)
command+=(--no-documentation)
command+=(--multithread)
echo "RUNNING: ${command[@]}"
if [ "$enable" -ne 0 ]; then
	"${command[@]}" || panic
fi

################################################################################

if [ "$os" != windows ]; then

for multithread in 0 1; do

	cat <<- EOF
	================================================================================
	BUILD: Shared Library Release Build (Multithread $multithread)
	================================================================================
	EOF
	command=("$build_program")
	command+=("${global_options[@]}")
	command+=(--build-dir   "$build_dir/shared_release-$multithread/build")
	command+=(--install-dir "$build_dir/shared_release-$multithread/install")
	command+=(--shared)
	command+=(--release)
	command+=(--documentation)
	command+=(--install)
	command+=(--test)
	if [ "$multithread" -ne 0 ]; then
		command+=(--multithread)
	else
		command+=(--no-multithread)
	fi
	echo "RUNNING: ${command[@]}"
	if [ "$enable" -ne 0 ]; then
		"${command[@]}" || panic
	fi

done

fi

################################################################################

for multithread in 0 1; do

	cat <<- EOF
	================================================================================
	BUILD: Multi-Thread Static Library Release Build
	================================================================================
	EOF
	command=("$build_program")
	command+=("${global_options[@]}")
	command+=(--build-dir   "$build_dir/static_release-$multithread/build")
	command+=(--install-dir "$build_dir/static_release-$multithread/install")
	command+=(--static)
	command+=(--release)
	command+=(--documentation)
	command+=(--install)
	command+=(--test)
	if [ "$multithread" -ne 0 ]; then
		command+=(--multithread)
	else
		command+=(--no-multithread)
	fi
	echo "RUNNING: ${command[@]}"
	if [ "$enable" -ne 0 ]; then
		"${command[@]}" || panic
	fi

done

################################################################################
