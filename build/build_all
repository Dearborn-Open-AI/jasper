#! /usr/bin/env bash

panic()
{
	echo "ERROR: $@"
	exit 1
}

program_dir=$(dirname "$0") || exit 1
abs_program_dir=$(readlink -f "$program_dir") || panic
build_program="$program_dir/build"

usage()
{
	echo "bad usage: $@"
	exit 2
}

verbose=0
build_dir=
crostini=0
enable=1

while getopts vb:cn option; do
	case "$option" in
	n)
		enable=0;;
	c)
		crostini=1;;
	b)
		build_dir="$OPTARG";;
	v)
		verbose=$((verbose + 1));
	esac
done
shift $((OPTIND - 1))

if [ -z "$build_dir" ]; then
	build_dir="$abs_program_dir/../tmp_cmake"
fi

global_options=()
if [ "$crostini" -ne 0 ]; then
	global_options+=(--crostini)
fi

cat <<- EOF
================================================================================
Static Library Debug Build (ASan, LSan, UBSan)
================================================================================
EOF
command=("$build_program")
command+=("${global_options[@]}")
command+=(--build-dir   "$build_dir/test_static_debug/build")
command+=(--install-dir "$build_dir/test_static_debug/install")
command+=(--static)
command+=(--debug)
command+=(--ubsan)
command+=(--asan)
command+=(--lsan)
command+=(--test)
command+=(--no-documentation)
command+=(--multithread)
echo "RUNNING: ${command[@]}"
if [ "$enable" -ne 0 ]; then
	"${command[@]}" || panic
fi

cat <<- EOF
================================================================================
Static Library Debug Build (TSan, UBSan)
================================================================================
EOF
command=("$build_program")
command+=("${global_options[@]}")
command+=(--build-dir   "$build_dir/test_static_debug_tsan/build")
command+=(--install-dir "$build_dir/test_static_debug_tsan/install")
command+=(--prefer-pthread)
command+=(--static)
command+=(--debug)
command+=(--ubsan)
command+=(--tsan)
command+=(--test)
command+=(--no-documentation)
command+=(--multithread)
echo "RUNNING: ${command[@]}"
if [ "$enable" -ne 0 ]; then
	"${command[@]}" || panic
fi

cat <<- EOF
================================================================================
Shared Library Release Build
================================================================================
EOF
command=("$build_program")
command+=("${global_options[@]}")
command+=(--build-dir   "$build_dir/shared_release/build")
command+=(--install-dir "$build_dir/shared_release/install")
command+=(--shared)
command+=(--release)
command+=(--documentation)
command+=(--install)
command+=(--test)
command+=(--multithread)
echo "RUNNING: ${command[@]}"
if [ "$enable" -ne 0 ]; then
	"${command[@]}" || panic
fi

cat <<- EOF
================================================================================
Static Library Release Build
================================================================================
EOF
command=("$build_program")
command+=("${global_options[@]}")
command+=(--build-dir   "$build_dir/static_release/build")
command+=(--install-dir "$build_dir/static_release/install")
command+=(--static)
command+=(--release)
command+=(--documentation)
command+=(--install)
command+=(--test)
command+=(--multithread)
echo "RUNNING: ${command[@]}"
if [ "$enable" -ne 0 ]; then
	"${command[@]}" || panic
fi
